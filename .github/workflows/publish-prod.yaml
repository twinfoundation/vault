name: Publish Production

on:
  workflow_dispatch:
    inputs:
      package:
        description: 'Which package to publish'
        required: true
        type: choice
        options:
          - vault-models
          - vault-connector-entity-storage
jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    if: github.ref == 'refs/heads/main'

    env:
      TEST_MNEMONIC: ${{ secrets.TEST_MNEMONIC }}

    services:
      vault:
        image: hashicorp/vault:1.18.0
        ports:
          - 8200:8200
        env:
          VAULT_DEV_ROOT_TOKEN_ID: root
        options: >-
          --cap-add=IPC_LOCK

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Set Vault environment variables
        run: |
          echo "VAULT_ADDR=http://localhost:8200" >> $GITHUB_ENV
          echo "VAULT_TOKEN=root" >> $GITHUB_ENV

      - name: Enable Transit Secrets Engine via API
        run: |
          curl \
            --header "X-Vault-Token: $VAULT_TOKEN" \
            --request POST \
            --data '{"type":"transit"}' \
            $VAULT_ADDR/v1/sys/mounts/transit

      - name: Remove Mono-Repo Node Modules
        run: |
          rm package.json
          rm package-lock.json

      - name: Check package version does not contain -next
        run: |
          cd packages/${{ github.event.inputs.package }}
          PACKAGE_VERSION=$(cat package.json | jq '.version' | tr -d '"')
          echo Package Version $PACKAGE_VERSION
          if [[ $PACKAGE_VERSION == *"-next"* ]]; then
            echo "Error: package version contains -next"
            exit 1
          fi

      - name: Run Dist
        run: |
          cd packages/${{ github.event.inputs.package }}
          npm install
          npm run dist

      - name: Cleanup package properties
        run: |
          cd packages/${{ github.event.inputs.package }}
          npm pkg delete scripts
          npm pkg delete devDependencies

      - name: Publish
        run: |
          cd packages/${{ github.event.inputs.package }}
          npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
